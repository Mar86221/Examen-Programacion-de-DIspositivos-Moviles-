package com.example.partidotracker.ui.partido

import android.os.Bundle
import android.util.Log
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.viewModels
import androidx.navigation.fragment.findNavController
import com.example.partidotracker.databinding.FragmentNewPartidoBinding
import com.example.partidotracker.PartidoReviewerAplication

//Creating the fragments that will be used in the project
class NewPartidoFragment : Fragment() {

    private val viewModel: PartidoViewModel by viewModels {
        PartidoViewModel.Factory
    }

    private lateinit var binding: FragmentNewPartidoBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        arguments?.let {

        }
    }
    //Variable generated by DataBinding, which inflates the views and this is done for the other fragments
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        binding = FragmentNewPartidoBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        setViewModel()
        observerStatus()
    }

    private fun setViewModel(){
        binding.viewmodel = viewModel
    }
    //This function shows the success of the binding processes
    private fun observerStatus() {
        viewModel.status.observe(viewLifecycleOwner) { status ->
            when{
                status.equals(PartidoViewModel.WRONG_INFORMATION) -> {
                    Log.d(APP_TAG, status)
                    viewModel.clearStatus()
                }

                status.equals(PartidoViewModel.MODELO_CREATED) ->{
                    Log.d(APP_TAG, status)
                    Log.d(APP_TAG, viewModel.getPartidos().toString())

                    viewModel.clearStatus()
                    findNavController().popBackStack()
                }
            }
        }
    }

    companion object {
        const val APP_TAG = "APP TAG"
    }


}